name: CI - Testing

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ 'epic-*' ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  NEXT_PUBLIC_APP_ENV: development
  NEXT_PUBLIC_FIREBASE_PROJECT_ID: demo-savvyproxy

jobs:
  # Job 1: Setup & Dependency Installation
  setup:
    name: Setup & Install Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache shared-types build
        id: cache-shared-types
        uses: actions/cache@v3
        with:
          path: 'packages/shared-types/dist'
          key: ${{ runner.os }}-shared-types-${{ hashFiles('packages/shared-types/src/**/*') }}

      - name: Build shared-types package
        if: steps.cache-shared-types.outputs.cache-hit != 'true'
        run: |
          cd packages/shared-types
          npm run build

  # Job 2: Type Checking
  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore node_modules
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies (fallback)
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci

      - name: Restore shared-types build
        uses: actions/cache/restore@v3
        with:
          path: 'packages/shared-types/dist'
          key: ${{ runner.os }}-shared-types-${{ hashFiles('packages/shared-types/src/**/*') }}

      - name: Run TypeScript type checking
        run: npm run typecheck

  # Job 3: Linting
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore node_modules
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies (fallback)
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci

      - name: Restore shared-types build
        uses: actions/cache/restore@v3
        with:
          path: 'packages/shared-types/dist'
          key: ${{ runner.os }}-shared-types-${{ hashFiles('packages/shared-types/src/**/*') }}

      - name: Run ESLint
        run: npm run lint

  # Job 4: Unit Tests - Web
  test-web:
    name: Unit Tests - Web
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore node_modules
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies (fallback)
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci

      - name: Restore shared-types build
        uses: actions/cache/restore@v3
        with:
          path: 'packages/shared-types/dist'
          key: ${{ runner.os }}-shared-types-${{ hashFiles('packages/shared-types/src/**/*') }}

      - name: Run Web Unit Tests
        run: |
          cd apps/web
          npm run test -- --coverage --passWithNoTests

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-web
          path: apps/web/coverage/
          retention-days: 7

  # Job 5: Unit Tests - Functions
  test-functions:
    name: Unit Tests - Functions
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore node_modules
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies (fallback)
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci

      - name: Restore shared-types build
        uses: actions/cache/restore@v3
        with:
          path: 'packages/shared-types/dist'
          key: ${{ runner.os }}-shared-types-${{ hashFiles('packages/shared-types/src/**/*') }}

      - name: Run Functions Unit Tests
        run: |
          cd apps/functions
          npm run test -- --coverage --passWithNoTests

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-functions
          path: apps/functions/coverage/
          retention-days: 7

  # Job 6: Build Validation
  build:
    name: Build Validation
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore node_modules
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies (fallback)
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci

      - name: Restore shared-types build
        uses: actions/cache/restore@v3
        with:
          path: 'packages/shared-types/dist'
          key: ${{ runner.os }}-shared-types-${{ hashFiles('packages/shared-types/src/**/*') }}

      - name: Cache Next.js Build
        uses: actions/cache@v3
        with:
          path: apps/web/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('apps/web/**/*.js', 'apps/web/**/*.ts', 'apps/web/**/*.tsx') }}

      - name: Build Web App
        run: |
          cd apps/web
          npm run build

      - name: Build Functions
        run: |
          cd apps/functions
          npm run build

  # Note: E2E tests with Firebase emulators are complex in CI
  # They should be run locally or using Firebase Test Lab
  # Keeping this job commented out until proper Firebase Test Lab integration

  # # Job 7: E2E Tests with Browser Matrix
  # e2e-tests:
  #   name: E2E Tests - ${{ matrix.browser }}
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   timeout-minutes: 30
  #
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       browser: [chromium]
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         cache: 'npm'
  #
  #     # ... (E2E steps commented out)

  # Job 7: Test Summary
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [typecheck, lint, test-web, test-functions, build]
    if: always()

    steps:
      - name: Create Summary
        run: |
          echo "# CI Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Job Status" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Type Check | ${{ needs.typecheck.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Lint | ${{ needs.lint.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests - Web | ${{ needs.test-web.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests - Functions | ${{ needs.test-functions.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**All tests must pass before merging.**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note:** E2E tests should be run locally or via Firebase Test Lab" >> $GITHUB_STEP_SUMMARY
